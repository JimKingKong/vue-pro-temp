(window.webpackJsonp=window.webpackJsonp||[]).push([["mockjs"],{"625a":function(n,t,o){},bf9b:function(n,t,o){"use strict";var e=o("625a");o.n(e).a},e28f:function(n,t,o){"use strict";o.r(t);var e={name:"Mockjs",components:{},mixins:[],props:{msg:{type:String,default:"Mockjs"}},data:function(){return{}},computed:{},watch:{},created:function(){},mounted:function(){},methods:{}},c=(o("bf9b"),o("2877")),s=Object(c.a)(e,(function(){var n=this,t=n.$createElement,o=n._self._c||t;return o("div",{staticClass:"mockjs"},[o("b-title-tag",{attrs:{name:"1."}}),o("p",[n._v("1.在mockjs中编写下面的服务")]),o("code-h",{attrs:{lang:"js",content:'\n    // 如果是测试环境(相当于服务器端)\n    const Mock = require("mockjs")\n\n    /**\n    *  Mock.mock( { } )\n    *  Mock.mock("", "", ()=>{} )\n    * 获取列表的数据 get\n    *  参数一：url (string | regex), 例如：/\\.json/,在get请求的时候使用\n    *  参数二: method\n    *  参数三：回调函数\n    */\n    // 监听 http://127.0.0.1//station/home1 的get请求\n    Mock.mock(/\\/station\\/home1/, "get", function(options) {\n      return { name: "get" }\n    })\n\n    // 监听 http://127.0.0.1//station/home2 的post请求\n    Mock.mock("/station/home2", "post", function(options) {\n      return { name: "post" }\n    })\n\n  '}}),o("p",[n._v("2.在config中启用mockjs")]),o("code-h",{attrs:{lang:"js",content:"\n\n    // 是否开始mock,不支持文件\n    export const startMock = true\n\n  "}})],1)}),[],!1,null,"58a8b79b",null);t.default=s.exports}}]);