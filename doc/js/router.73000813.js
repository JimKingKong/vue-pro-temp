(window.webpackJsonp=window.webpackJsonp||[]).push([["router"],{"3f5d":function(n,e,a){"use strict";a.r(e);var t={name:"Router",components:{},mixins:[],props:{msg:{type:String,default:"Router"}},data:function(){return{}},computed:{},watch:{},created:function(){},mounted:function(){},methods:{}},r=(a("cd1d"),a("2877")),o=Object(r.a)(t,(function(){var n=this,e=n.$createElement,a=n._self._c||e;return a("div",{staticClass:"router"},[a("br"),a("b-title-tag",{attrs:{name:"1.路由的规范"}}),a("p",[n._v("1.用约定路由，自动注册路由。")]),a("p",[n._v("2.在页面组件的同级目录下，新建一个route.js文件，来编约定路由")]),a("p",[n._v("3.在src/views的目录下的load-routes.js文件，会自动加载路由")]),a("p",[n._v("4.在src/router的目录下的 register-routes.js文件，会自动组装路由")]),a("p",[n._v("5.在src/router的目录下的 index.js文件，会自动注册路由")]),a("p",[n._v("6.路由最多支持3级的嵌套。需要四级的需要手动修改register-routes.js文件")]),a("b-title-tag",{attrs:{name:"2.编写约定路由"}}),a("p",[n._v("1.编写约定路由的规范 ")]),n._v(" 编写一级路由( http://127.0.0.1/login ) "),a("code-h",{attrs:{lang:"js",content:'\n    // 没有启用懒加载路由\n    // import Login from "./login.vue"\n    // 启用了懒加载路由\n    const Login = () => import(/* webpackChunkName: "login" */ "./login.vue")\n    export default {\n      path: "/login", // 路由的路劲，一级路由需要 /\n      name: "login", // 路由的名称\n      pname: "", // 父亲路由的名称\n      level: 1, // 一级路由,最多支持3级路由\n      component: Login,\n      children: [\n      ],\n      meta: {\n        keepAlive: false, // 需不需要缓存\n        requireAuth: false // 需不需要登录才能访问\n      }\n    }\n  '}}),n._v(" 编写一级路由( http://127.0.0.1/main ) "),a("code-h",{attrs:{lang:"js",content:'\n    // 没有启用懒加载路由\n    // import Main from "./main.vue"\n    // 启用了懒加载路由\n    const Main = () => import(/* webpackChunkName: "main" */ "./main.vue")\n    export default {\n      path: "/main", // 路由的路劲，一级路由需要 /\n      name: "main", // 路由的名称\n      pname: "", // 父亲路由的名称\n      level: 1, // 一级路由,最多支持3级路由\n      component: Main,\n      children: [\n      ],\n      meta: {\n        keepAlive: false, // 需不需要缓存\n        requireAuth: false // 需不需要登录才能访问\n      }\n    }\n  '}}),n._v(" 编写二级路由 ( http://127.0.0.1/main/usermanage ) "),a("code-h",{attrs:{lang:"js",content:'\n    // 没有启用懒加载路由\n    // import Usermanage from "./usermanage.vue"\n    // 启用了懒加载路由\n    const Usermanage = () => import(/* webpackChunkName: "usermanage" */ "./usermanage.vue")\n    export default {\n      path: "usermanage", // 二级路由前面没有/\n      name: "usermanage", // 路由的名称\n      pname: "main", // 父亲路由的名称\n      level: 2, // 二级路由（number类型）\n      component: Usermanage,\n      children: [\n      ],\n      meta: {\n        keepAlive: true, // 指定页面需不需要缓存\n        requireAuth: true // 指定页面需不需要登录才能访问\n      }\n    }\n\n  '}}),n._v(" 编写三级路由(用的比较少) ( http://127.0.0.1/main/usermanage/role ) "),a("code-h",{attrs:{lang:"js",content:'\n    // 没有启用懒加载路由\n    // import Role from "./role.vue"\n    // 启用了懒加载路由\n    const Role = () => import(/* webpackChunkName: "role" */ "./role.vue")\n    export default {\n      path: "role", // 三级路由前面没有/\n      name: "role",\n      pname: "usermanage", // 父亲路由的名称\n      level: 3, // 三级路由（number类型）\n      component: Role,\n      children: [\n      ],\n      meta: {\n        keepAlive: false, // 指定页面需不需要缓存\n        requireAuth: false // 指定页面需不需要登录才能访问\n      }\n    }\n  '}}),a("p",[n._v("2.上面编写的三级路由等价于")]),a("code-h",{attrs:{lang:"js",content:'\n    [\n      {\n        path: "/login", // 一级路由前面有/\n        name: "login",\n        pname: "", // 父亲路由的名称\n        level: 1, // 一级路由（number类型）\n        component: Login,\n        children: [\n        ],\n        meta: {\n          keepAlive: false, // 指定页面需不需要缓存\n          requireAuth: false // 指定页面需不需要登录才能访问\n        }\n      },\n       {\n        path: "/main", // 一级路由前面没/\n        name: "main",\n        pname: "", // 父亲路由的名称\n        level: 1, // 一级路由（number类型）\n        component: Main,\n        children: [\n          {\n            path: "usermanage", // 二级路由前面没有/\n            name: "usermanage", // 路由的名称\n            pname: "main", // 父亲路由的名称\n            level: 2, // 二级路由（number类型）\n            component: Usermanage,\n            children: [\n              {\n                path: "role", // 三级路由前面没有/\n                name: "role",\n                pname: "usermanage", // 父亲路由的名称\n                level: 3, // 三级路由（number类型）\n                component: Role,\n                children: [\n                ],\n                meta: {\n                  keepAlive: false, // 指定页面需不需要缓存\n                  requireAuth: false // 指定页面需不需要登录才能访问\n                }\n              }\n            ],\n            meta: {\n              keepAlive: true, // 指定页面需不需要缓存\n              requireAuth: true // 指定页面需不需要登录才能访问\n            }\n          }\n        ],\n        meta: {\n          keepAlive: false, // 指定页面需不需要缓存\n          requireAuth: false // 指定页面需不需要登录才能访问\n        }\n      }\n    ]\n  '}}),a("b-title-tag",{attrs:{name:"3.自动注册路由的原理"}}),a("p",[n._v("1.自动加载路由")]),a("p",[n._v("在src/views的目录下的load-routes.js文件，会自动加载route.js文件编写的路由配置 ")]),a("code-h",{attrs:{lang:"js",content:'\n    [\n      {\n        path: "/login", // 一级路由前面有/\n        name: "login",\n        pname: "", // 父亲路由的名称\n        level: 1, // 一级路由（number类型）\n        component: Login,\n        children: [\n        ],\n        meta: {\n          keepAlive: false, // 指定页面需不需要缓存\n          requireAuth: false // 指定页面需不需要登录才能访问\n        }\n      },\n      {\n        path: "/main", // 一级路由前面没/\n        name: "main",\n        pname: "", // 父亲路由的名称\n        level: 1, // 一级路由（number类型）\n        component: Main,\n        children: [\n        ],\n        meta: {\n          keepAlive: false, // 指定页面需不需要缓存\n          requireAuth: false // 指定页面需不需要登录才能访问\n        }\n      },\n      {\n        path: "usermanage", // 二级路由前面没有/\n        name: "usermanage", // 路由的名称\n        pname: "main", // 父亲路由的名称\n        level: 2, // 二级路由（number类型）\n        component: Usermanage,\n        children: [\n        ],\n        meta: {\n          keepAlive: true, // 指定页面需不需要缓存\n          requireAuth: true // 指定页面需不需要登录才能访问\n        }\n      },\n      {\n        path: "role", // 三级路由前面没有/\n        name: "role",\n        pname: "usermanage", // 父亲路由的名称\n        level: 3, // 三级路由（number类型）\n        component: Role,\n        children: [\n        ],\n        meta: {\n          keepAlive: false, // 指定页面需不需要缓存\n          requireAuth: false // 指定页面需不需要登录才能访问\n        }\n      }\n    ]\n  '}}),a("p",[n._v("2.自动组装路由")]),a("p",[n._v("在src/router的目录下的 register-routes.js文件，会自动组装路由，组装结构如下：")]),a("code-h",{attrs:{lang:"js",content:'\n    [\n      {\n        path: "/login", // 一级路由前面有/\n        name: "login",\n        pname: "", // 父亲路由的名称\n        level: 1, // 一级路由（number类型）\n        component: Login,\n        children: [\n        ],\n        meta: {\n          keepAlive: false, // 指定页面需不需要缓存\n          requireAuth: false // 指定页面需不需要登录才能访问\n        }\n      },\n       {\n        path: "/main", // 一级路由前面没/\n        name: "main",\n        pname: "", // 父亲路由的名称\n        level: 1, // 一级路由（number类型）\n        component: Main,\n        children: [\n          {\n            path: "usermanage", // 二级路由前面没有/\n            name: "usermanage", // 路由的名称\n            pname: "main", // 父亲路由的名称\n            level: 2, // 二级路由（number类型）\n            component: Usermanage,\n            children: [\n              {\n                path: "role", // 三级路由前面没有/\n                name: "role",\n                pname: "usermanage", // 父亲路由的名称\n                level: 3, // 三级路由（number类型）\n                component: Role,\n                children: [\n                ],\n                meta: {\n                  keepAlive: false, // 指定页面需不需要缓存\n                  requireAuth: false // 指定页面需不需要登录才能访问\n                }\n              }\n            ],\n            meta: {\n              keepAlive: true, // 指定页面需不需要缓存\n              requireAuth: true // 指定页面需不需要登录才能访问\n            }\n          }\n        ],\n        meta: {\n          keepAlive: false, // 指定页面需不需要缓存\n          requireAuth: false // 指定页面需不需要登录才能访问\n        }\n      }\n    ]\n  '}}),a("p",[n._v("3.自动注册路由")]),a("p",[n._v("在src/router的目录下的 index.js 文件，会自动注册路由")]),a("code-h",{attrs:{lang:"js",content:'\n    import Vue from "vue"\n    import VueRouter from "vue-router"\n    import ARoutes from "../views/load-routes.js"\n    Vue.use(VueRouter)\n    const routes = [\n      {\n        path: "/",\n        redirect: "/main"\n      },\n      ...ARoutes\n    ]\n  '}}),a("br")],1)}),[],!1,null,"49936b0a",null);e.default=o.exports},cd1d:function(n,e,a){"use strict";var t=a("d348");a.n(t).a},d348:function(n,e,a){}}]);